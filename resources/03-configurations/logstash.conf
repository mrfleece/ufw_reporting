input {
  file {
    # path => "D:/Projects/firewall-blocked-5-to-0-days-ago.csv"
	path => "D:/Projects/csv_data/*.csv"
    start_position => "beginning"
    sincedb_path => "NUL"
  }
}
filter {
  csv {
    separator => ","
	skip_header => true
  }
  mutate {
        rename => {"column1" => "timestamp"}
		rename => {"column2" => "id"}
		rename => {"column3" => "message"}
		rename => {"column4" => "uptime"}
    }
  mutate {
		gsub => ["timestamp",",",""]
  }
  grok {
      match => { "message" => ".*UFW BLOCK.*IN=%{NOTSPACE:dev_in}.*OUT= .*MAC=%{DATA:ufw_mac} .*SRC=%{IP:src_ip}.*PROTO=%{WORD:ufw_protocol}.*SPT=%{NUMBER:src_port}.*DPT=%{NUMBER:dst_port}" }
  }
  date {
    match => [ "timestamp", "yyyy/MM/dd HH:mm:ss.SSS" ]
  }
  if [src_ip] =~ "^10.0.*" or [src_ip] =~ "^127.0.*" or [src_ip] == "0.0.0.0" { 
	mutate {
		add_tag => ["internal"]
	}
  }
  if "internal" not in [tags] {
	geoip {
		default_database_type => "City"
		source => "src_ip"
		target => "geo"
		tag_on_failure => ["geoip-city-failed"]
	}
	geoip {
		default_database_type => "ASN"
		source => "src_ip"
		target => "geo"
		tag_on_failure => ["geoip-asn-failed"]
	}
  }
}
output {
	elasticsearch {
		hosts => "127.0.0.1:9200"
		index => "endpoints"
	}
#    csv {
#         fields => ["timestamp","id","message","uptime"]
# 		path => "D:/Projects/data_export.csv"
# 		csv_options => {
# 			"headers" => true
# 		}
# 	}
}

